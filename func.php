<!-- Возведите 2 в 10 степень. -->
<?php
echo pow(2, 10);
?>


</br>
</br>
<!-- Найдите квадратный корень из 245. -->
<?php
echo sqrt(245);
?>


</br>
</br>
<!-- Дан массив:
<?php
	$arr = [4, 2, 5, 19, 13, 0, 10];
?>
Найдите корень из суммы квадратов его элементов. Для решения воспользуйтесь циклом foreach. -->
<?php
	$arr = [4, 2, 5, 19, 13, 0, 10];
    $result = 0;
    foreach($arr as $elem) {
    $result += pow($elem, 2);
    }
    echo  sqrt($result);
?>

</br>
</br>
<!-- Найдите квадратный корень из 379. Результат округлите до целых, до десятых, до сотых. -->
<?php
	
    echo  round(sqrt(379)) . "<br>";
    echo  round(sqrt(379), 1) . "<br>";
    echo  round(sqrt(379), 2) . "<br>";
?>


</br>
</br>
<!-- Найдите квадратный корень из 587. Округлите результат в большую и меньшую сторону, запишите результаты округления в ассоциативный массив с ключами 'floor' и 'ceil'. -->
<?php
	
    $a = floor(sqrt(587));
    $b = ceil(sqrt(587));
    $arr = [];
        $arr['floor'] = $a;
        $arr['ceil'] = $b;

        var_dump($arr);

?>


</br>
</br>
<!-- Дан массив:
<?php
	$arr = [4, -2, 5, 19, -130, 0, 10];
?>
Найдите минимальное и максимальное число. -->
<?php
	
    $arr = [4, -2, 5, 19, -130, 0, 10];
    echo min($arr) . "<br>";
    echo max($arr)

?>



</br>
</br>
<!-- Выведите на экран случайное целое число от 1 до 100. -->
<?php
echo mt_rand(1, 100);
?>

</br>
</br>
<!-- С помощью цикла заполните массив 10-ю случайными целыми числами. -->
<?php
$arr = [];

for($i=0; $i<10; $i++) {
    $arr[$i] = mt_rand(1, 100);
}
var_dump($arr);
?>


</br>
</br>
<!-- Даны переменные $a и $b. Найдите модуль разности $a и $b. Проверьте работу скрипта самостоятельно для различных $a и $b. -->
<?php
$a = -5;
$b = 21;
echo abs($a) - abs($b);
?>


</br>
</br>
<!-- Дана строка 'php'. Сделайте из нее строку 'PHP'. -->
<?php
$str = "php";
echo mb_strtoupper($str);
?>

</br>
</br>
<!-- Дана строка 'PHP'. Сделайте из нее строку 'php'. -->
<?php
$str = "PHP";
echo mb_strtolower($str);
?>

</br>
</br>
<!-- Дана строка 'london'. Сделайте из нее строку 'London'. -->
<?php
$str = "london";
echo ucfirst($str);
?>

</br>
</br>
<!-- Дана строка 'London'. Сделайте из нее строку 'london'. -->
<?php
$str = "London";
echo lcfirst($str);
?>

</br>
</br>
<!-- Дана строка 'london is the capital of great britain'. Сделайте из нее строку 'London Is The Capital Of Great Britain'. -->
<?php
$str = "london is the capital of great britain";
echo ucwords($str);
?>

</br>
</br>
<!-- Дана строка 'LONDON'. Сделайте из нее строку 'London'. -->
<?php
$str = "LONDON";
echo ucfirst(mb_strtolower($str));
?>

</br>
</br>
<!-- Дана строка 'html css php'. Найдите количество символов в этой строке. -->
<?php
$str = "html css php";
echo mb_strlen($str);
?>

</br>
</br>
<!-- Дана переменная $password, в которой хранится пароль пользователя. Если количество символов пароля больше 5-ти и меньше 10-ти, то выведите пользователю сообщение о том, что пароль подходит, иначе сообщение о том, что нужно придумать другой пароль. -->
<?php
$pas = "yqwerlvtyuo";
if(mb_strlen($pas) > 5 and mb_strlen($pas) < 10) {
    echo "Пароль подходит";
} else echo "Нужно придумать другой пароль";
?>

</br>
</br>
<!-- Дана строка 'html css php'. Вырежьте из нее и выведите на экран слово 'html', слово 'css' и слово 'php'. -->
<?php
$str = "html css php";
echo substr($str, 0, 4) . "<br>";
echo substr($str, 5, 3) . "<br>";
echo substr($str, 9, 3) . "<br>";
?>


</br>
</br>
<!-- Дана строка. Вырежьте и выведите на экран последние 3 символа этой строки. -->
<?php
$str = "html css php";
echo substr($str, -3) . "<br>";

?>

</br>
</br>
<!-- Дана строка. Проверьте, что она начинается на 'http://'. -->
<?php
$str = "http://gfhsklsfkaf davsdv";
if(substr($str, 0, 7) === 'http://') {echo "есть";
} else echo "нет";

?>

</br>
</br>
<!-- Дана строка. Проверьте, что она начинается на 'http://' или на 'https://'. -->
<?php
$str = "https://gfhsklsfkaf davsdv";
if(strpos($str, 'http://') === 0 or strpos($str, 'https://') === 0 ) {
    echo "есть";
} else echo "нет";

?>

</br>
</br>
<!-- Дана строка. Проверьте, что она заканчивается на '.png'. -->
<?php
$str = "https://gfhsklsfkaf davsdv .png";

if(strpos($str, '.png') === (mb_strlen($str) - 4) ) {
    echo "есть";
} else echo "нет";

?>

</br>
</br>
<!-- Дана строка. Проверьте, что она заканчивается на '.png' или на '.jpg'. -->
<?php
$str = "https://gfhsklsfkaf davsdv.jplg";

if(strpos($str, '.png') === (mb_strlen($str) - 4) or strpos($str, '.jpg') === (mb_strlen($str) - 4)  ) {
    echo "есть";
} else echo "нет";

?>

</br>
</br>
<!-- Дана строка. Если в этой строке более 5-ти символов - вырежьте из нее первые 5 символов, добавьте троеточие в конец и выведите на экран. Если же в этой строке 5 и менее символов - просто выведите эту строку на экран. -->
<?php
$str = "https://gfhsklsfkaf davsdv.jplg";

if((mb_strlen($str) > 5) ) {
    echo  substr($str, 0, 5) . "...";
} else echo $str;

?>

</br>
</br>
<!-- Дана строка '31.12.2013'. Замените все точки на дефисы. -->
<?php
$str = "31.12.2013";
echo str_replace('.', '-', $str);


?>

</br>
</br>
<!-- Дана строка. Замените в ней все буквы 'a' на цифру 1, буквы 'b' - на 2, а буквы 'c' - на 3. -->
<?php
$str = "aaabbbccc";
echo strtr($str, ['a' => '1', 'b' => '2', 'c' => '3']);
?>

</br>
</br>
<!-- Дана строка с буквами и цифрами, например, '1a2b3c4b5d6e7f8g9h0'. Удалите из нее все цифры. То есть в нашем случае должна получится строка 'abcbdefgh'. -->
<?php
$str = "1a2b3c4b5d6e7f8g9h0";
echo strtr($str, ['1' => '', '2' => '', '3' => '', '4' => '', '5' => '', '6' => '', '7' => '', '8' => '', '9' => '', '0' => '']);
?>


</br>
</br>
<!-- Дана строка $str. Вырежьте из нее подстроку с 3-го символа (отсчет с нуля), 5 штук и вместо нее вставьте '!!!'. -->
<?php
$str = "fvgadbdangmna";
echo str_replace(substr($str, 3, 5), "!!!", $str);
?>

</br>
</br>
<!-- Дана строка 'abc abc abc'. Определите позицию первой буквы 'b'. -->
<?php
$str = 'abc abc abc';
echo strpos($str, "b");
?>

</br>
</br>
<!-- Дана строка 'abc abc abc'. Определите позицию последней буквы 'b'. -->
<?php
$str = 'abc abc abc';
echo strrpos($str, "b");
?>

</br>
</br>
<!-- Дана строка 'abc abc abc'. Определите позицию первой найденной буквы 'b', если начать поиск не с начала строки, а с позиции 3. -->
<?php
$str = 'abc abc abc';
echo strpos($str, "b", 3);
?>

</br>
</br>
<!-- Дана строка 'aaa aaa aaa aaa aaa'. Определите позицию второго пробела. -->
<?php
$str = 'aaa aaa aaa aaa aaa';
echo strpos($str, " ", strpos($str, " ") + 1);
?>

</br>
</br>
<!-- Проверьте, что в строке есть две точки подряд. -->
<?php
$str = 'aaa aaa aaa. aaa aaa';
if(strpos($str, "..")) {echo "true";
} else echo "false";
?>


</br>
</br>
<!-- Дана строка 'html css php'. Запишите каждое слово этой строки в отдельный элемент массива. -->
<?php
$str = 'html css php';
$arr = explode(" ", $str);
var_dump($arr);
?>

</br>
</br>
<!-- Дан массив с элементами 'html', 'css', 'php'. С помощью implode создайте строку из этих элементов, разделенных запятыми. -->
<?php
$str = implode(", ", $arr);
var_dump($str);
?>

</br>
</br>
<!-- В переменной $date лежит дата в формате год-месяц-день. Преобразуйте эту дату в формат день.месяц.год. -->
<?php
$date = "2022-05-04";
$arr = explode("-", $date);
echo $arr[2] . "." . $arr[1] . "." . $arr[0];
?>

</br>
</br>
<!-- Дана строка '1234567890'. Разбейте ее на массив с элементами '12', '34', '56', '78', '90'. -->
<?php
$str = "1234567890";

var_dump(str_split($str, 2));
?>


</br>
</br>
<!-- Дана строка '1234567890'. Сделайте из нее строку '12-34-56-78-90' не используя цикл. -->
<?php
$str = "1234567890";
$arr = str_split($str, 2);
echo implode("-", $arr);
?>

</br>
</br>
<!-- Дана строка. Очистите ее от концевых пробелов. -->
<?php
$str = " 12 ";

$str2 = trim($str, " ");
echo mb_strlen($str2);
?>


</br>
</br>
<!-- Дана строка '/php/'. Сделайте из нее строку 'php', удалив концевые слеши. -->
<?php
$str = '/php/';
echo trim($str, "-/");
?>

</br>
</br>
<!-- Дана строка 'слова слова слова.'. В конце этой строки может быть точка, а может и не быть. Сделайте так, чтобы в конце этой строки гарантировано стояла точка. То есть: если этой точки нет - ее надо добавить, а если есть - ничего не делать. Задачу решите через rtrim без всяких ифов. -->
<?php
$str = 'слова слова слова';
echo rtrim($str, ". ") . ".";
?>

</br>
</br>
<!-- Дана строка '12345'. Сделайте из нее строку '54321'. -->
<?php
$str = "12345";
echo strrev($str);
?>

</br>
</br>
<!-- Проверьте, является ли слово палиндромом (одинаково читается во всех направлениях, примеры таких слов: madam, otto, kayak, nun, level). -->
<?php
$str = "madarm";
if($str === strrev($str)) {
    echo "yes";
} else {
    echo "no";
}

?>

</br>
</br>
<!-- Дана строка. Перемешайте символы этой строки в случайном порядке. -->
<?php
$str = "madarm";
echo str_shuffle($str);


?>


</br>
</br>
<!-- Создайте строку из 6-ти случайных маленьких латинских букв так, чтобы буквы не повторялись. Нужно сделать так, чтобы в нашей строке могла быть любая латинская буква, а не ограниченный набор. -->
<?php
$abc = 'abcdefghiklmnopqrstvxyz';
echo substr(str_shuffle($abc), 0, 6);
?>

</br>
</br>
<!-- Дана строка '12345678'. Сделайте из нее строку '12 345 678'. -->
<?php
$str = '12345678';
$str2 = number_format((int)$str, 1, ".", " ");
echo substr($str2, 0, mb_strlen($str2) - 2);
?>

</br>
</br>
<!-- С помощью одного цикла и функции str_repeat выведите на экран следующую пирамидку:

x
xx
xxx
xxxx
xxxxx
xxxxxx
xxxxxxx
xxxxxxxx
xxxxxxxxx -->
<?php
$str = "x";
for($i=0; $i < 10; $i++) {
    echo str_repeat($str, $i) . "<br>";
}
?>


</br>
</br>
<!-- С помощью одного цикла и функции str_repeat выведите на экран следующую пирамидку:

1
22
333
4444
55555
666666
7777777
88888888
999999999 -->
<?php
for($i=0; $i < 10; $i++) {
    echo str_repeat($i, $i) . "<br>";
}
?>

</br>
</br>
<!-- Дана строка 'html, <b>php</b>, js'. Удалите теги из этой строки. -->
<?php
$str = 'html, <b>php</b>, js';
echo strip_tags($str);

?>


</br>
</br>
<!-- Дана строка 'html, <b>php</b>, js'. Выведите ее на экран 'как есть': то есть браузер не должен преобразовать <b> в жирный. -->
<?php
$str = 'html, <b>php</b>, js';
echo htmlspecialchars($str);

?>

</br>
</br>
<!-- Узнайте код символов 'a', 'b', 'c', пробела. -->
<?php
echo ord("a") . '<br>';
echo ord("b") . '<br>';
echo ord("c") . '<br>';

?>

</br>
</br>
<!-- Выведите на экран символ с кодом 33. -->
<?php
echo chr(33) . '<br>';


?>

</br>
</br>
<!-- Запишите в переменную $str случайный символ - большую букву латинского алфавита. Для этого с помощью таблицы ASCII определите какие целые числа соответствуют большим буквам латинского алфавита. -->
<?php
$str = chr(mt_rand(65, 90));
echo $str;
?>

</br>
</br>
<!-- Запишите в переменную $str случайную строку $len длиной, состоящую из маленьких букв латинского алфавита. -->
<?php
$len = "";
for($i = 1; $i < 10; $i++) {
    $a = chr(mt_rand(97, 122));
    $len .= $a;
};
$str = $len;
echo $str;
?>

</br>
</br>
<!-- Дана буква английского алфавита. Узнайте, она маленькая или большая. -->
<?php
$a = "C";
if(ord($a) >= 97 and ord($a) <= 122 ) {
    echo "маленькая";
}else echo "большая";

?>

</br>
</br>
<!-- Дана строка 'ab-cd-ef'. С помощью функции strchr выведите на экран строку '-cd-ef'. -->
<?php
$str = 'ab-cd-ef';
echo strchr($str, "-");
?>

</br>
</br>
<!-- Дана строка 'ab-cd-ef'. С помощью функции strrchr выведите на экран строку '-ef'. -->
<?php
$str = 'ab-cd-ef';
echo strrchr($str, "-");
?>

</br>
</br>
<!-- Дана строка 'ab--cd--ef'. С помощью функции strstr выведите на экран строку '--cd--ef'. -->
<?php
$str = 'ab--cd--ef';
echo strstr($str, "--");
?>